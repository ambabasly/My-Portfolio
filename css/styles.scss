:root {
  --primary-bottonbackground-color: #357b70;
  --button-background-secondary-color: #e0b354;
  --dark-gray-color: #2b2b2b;
  --no-text-decoration: none;
  --button-color: #fff;
  --a-visited: #489c79;
  --display-inline-block: inline-block;
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.6;
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

a {
  color: var(--primary-bottonbackground-color);

  &:hover, &:focus {
    /* No underlining when hovering over a link */
    text-decoration: var(--no-text-decoration);
  }
  &:visited {
    /* selected link */
      color: var(--a-visited);
  } 
}

button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: var(--display-inline-block);
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: var(--primary-bottonbackground-color);
  color: var(--button-color);
  text-decoration: var(--no-text-decoration);
  /*adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.2s;
  transition-property: opacity;
  &:hover, &:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
  }
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

.profile_portrait {
  float: left;
  width: 250px;
  margin-right: 40px;
  border-radius: 50%;
}

.page-footer {
  clear: both;
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

.profile_text {
  flex: 1 1 100px;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}

.navigation-list {
  list-style-type: none;

  li {
    display: inline-block;
    margin-left: 15px;

    .navigation-list__items--active {
      text-decoration: none;
    }
  }
}

.page-header_item  {
  display: block;
  height: auto;
  max-width: 100%;
  flex: 0 1 200px;
}

.page-header_item:last-child {
  flex-grow: 1;
  text-align: right;
}

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
}

.grid_item {
  background-color: lightgray;
  padding: 20px;
  margin: 20px;
  border: 10px;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
    grid-gap: 10px;
  }
  .grid_item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
    grid-gap: 10px;
  }
  .grid_item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

.about {
  max-width: 700px;
  margin: 0 auto;
  text-align: center;
  ul {
    list-style-type: none;
  }
}

.contact {
  max-width: 700px;
  margin: 0 auto;
  text-align: center;
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation: 35s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(200px, 96px);
  }
}

.cloud-back {
  animation: 39s cloud-move-reverse infinite alternate linear;
}
